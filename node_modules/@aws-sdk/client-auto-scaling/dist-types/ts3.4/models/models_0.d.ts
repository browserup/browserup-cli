import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { AutoScalingServiceException as __BaseException } from "./AutoScalingServiceException";
export interface AcceleratorCountRequest {
  Min?: number;
  Max?: number;
}
export declare const AcceleratorManufacturer: {
  readonly AMAZON_WEB_SERVICES: "amazon-web-services";
  readonly AMD: "amd";
  readonly NVIDIA: "nvidia";
  readonly XILINX: "xilinx";
};
export type AcceleratorManufacturer =
  (typeof AcceleratorManufacturer)[keyof typeof AcceleratorManufacturer];
export declare const AcceleratorName: {
  readonly A100: "a100";
  readonly K80: "k80";
  readonly M60: "m60";
  readonly RADEON_PRO_V520: "radeon-pro-v520";
  readonly T4: "t4";
  readonly V100: "v100";
  readonly VU9P: "vu9p";
};
export type AcceleratorName =
  (typeof AcceleratorName)[keyof typeof AcceleratorName];
export interface AcceleratorTotalMemoryMiBRequest {
  Min?: number;
  Max?: number;
}
export declare const AcceleratorType: {
  readonly FPGA: "fpga";
  readonly GPU: "gpu";
  readonly INFERENCE: "inference";
};
export type AcceleratorType =
  (typeof AcceleratorType)[keyof typeof AcceleratorType];
export declare class ActiveInstanceRefreshNotFoundFault extends __BaseException {
  readonly name: "ActiveInstanceRefreshNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ActiveInstanceRefreshNotFoundFault,
      __BaseException
    >
  );
}
export declare const ScalingActivityStatusCode: {
  readonly Cancelled: "Cancelled";
  readonly Failed: "Failed";
  readonly InProgress: "InProgress";
  readonly MidLifecycleAction: "MidLifecycleAction";
  readonly PendingSpotBidPlacement: "PendingSpotBidPlacement";
  readonly PreInService: "PreInService";
  readonly Successful: "Successful";
  readonly WaitingForConnectionDraining: "WaitingForConnectionDraining";
  readonly WaitingForELBConnectionDraining: "WaitingForELBConnectionDraining";
  readonly WaitingForInstanceId: "WaitingForInstanceId";
  readonly WaitingForInstanceWarmup: "WaitingForInstanceWarmup";
  readonly WaitingForSpotInstanceId: "WaitingForSpotInstanceId";
  readonly WaitingForSpotInstanceRequestId: "WaitingForSpotInstanceRequestId";
};
export type ScalingActivityStatusCode =
  (typeof ScalingActivityStatusCode)[keyof typeof ScalingActivityStatusCode];
export interface Activity {
  ActivityId: string | undefined;
  AutoScalingGroupName: string | undefined;
  Description?: string;
  Cause: string | undefined;
  StartTime: Date | undefined;
  EndTime?: Date;
  StatusCode: ScalingActivityStatusCode | string | undefined;
  StatusMessage?: string;
  Progress?: number;
  Details?: string;
  AutoScalingGroupState?: string;
  AutoScalingGroupARN?: string;
}
export interface ActivitiesType {
  Activities: Activity[] | undefined;
  NextToken?: string;
}
export interface ActivityType {
  Activity?: Activity;
}
export interface AdjustmentType {
  AdjustmentType?: string;
}
export interface Alarm {
  AlarmName?: string;
  AlarmARN?: string;
}
export declare class AlreadyExistsFault extends __BaseException {
  readonly name: "AlreadyExistsFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<AlreadyExistsFault, __BaseException>);
}
export interface AttachInstancesQuery {
  InstanceIds?: string[];
  AutoScalingGroupName: string | undefined;
}
export declare class ResourceContentionFault extends __BaseException {
  readonly name: "ResourceContentionFault";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ResourceContentionFault, __BaseException>
  );
}
export declare class ServiceLinkedRoleFailure extends __BaseException {
  readonly name: "ServiceLinkedRoleFailure";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceLinkedRoleFailure, __BaseException>
  );
}
export interface AttachLoadBalancersResultType {}
export interface AttachLoadBalancersType {
  AutoScalingGroupName: string | undefined;
  LoadBalancerNames: string[] | undefined;
}
export interface AttachLoadBalancerTargetGroupsResultType {}
export interface AttachLoadBalancerTargetGroupsType {
  AutoScalingGroupName: string | undefined;
  TargetGroupARNs: string[] | undefined;
}
export interface AttachTrafficSourcesResultType {}
export interface TrafficSourceIdentifier {
  Identifier: string | undefined;
  Type?: string;
}
export interface AttachTrafficSourcesType {
  AutoScalingGroupName: string | undefined;
  TrafficSources: TrafficSourceIdentifier[] | undefined;
}
export interface FailedScheduledUpdateGroupActionRequest {
  ScheduledActionName: string | undefined;
  ErrorCode?: string;
  ErrorMessage?: string;
}
export interface BatchDeleteScheduledActionAnswer {
  FailedScheduledActions?: FailedScheduledUpdateGroupActionRequest[];
}
export interface BatchDeleteScheduledActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionNames: string[] | undefined;
}
export interface BatchPutScheduledUpdateGroupActionAnswer {
  FailedScheduledUpdateGroupActions?: FailedScheduledUpdateGroupActionRequest[];
}
export interface ScheduledUpdateGroupActionRequest {
  ScheduledActionName: string | undefined;
  StartTime?: Date;
  EndTime?: Date;
  Recurrence?: string;
  MinSize?: number;
  MaxSize?: number;
  DesiredCapacity?: number;
  TimeZone?: string;
}
export interface BatchPutScheduledUpdateGroupActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledUpdateGroupActions: ScheduledUpdateGroupActionRequest[] | undefined;
}
export declare class LimitExceededFault extends __BaseException {
  readonly name: "LimitExceededFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<LimitExceededFault, __BaseException>);
}
export interface CancelInstanceRefreshAnswer {
  InstanceRefreshId?: string;
}
export interface CancelInstanceRefreshType {
  AutoScalingGroupName: string | undefined;
}
export interface CompleteLifecycleActionAnswer {}
export interface CompleteLifecycleActionType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleActionToken?: string;
  LifecycleActionResult: string | undefined;
  InstanceId?: string;
}
export interface LaunchTemplateSpecification {
  LaunchTemplateId?: string;
  LaunchTemplateName?: string;
  Version?: string;
}
export interface LifecycleHookSpecification {
  LifecycleHookName: string | undefined;
  LifecycleTransition: string | undefined;
  NotificationMetadata?: string;
  HeartbeatTimeout?: number;
  DefaultResult?: string;
  NotificationTargetARN?: string;
  RoleARN?: string;
}
export interface InstancesDistribution {
  OnDemandAllocationStrategy?: string;
  OnDemandBaseCapacity?: number;
  OnDemandPercentageAboveBaseCapacity?: number;
  SpotAllocationStrategy?: string;
  SpotInstancePools?: number;
  SpotMaxPrice?: string;
}
export declare const BareMetal: {
  readonly EXCLUDED: "excluded";
  readonly INCLUDED: "included";
  readonly REQUIRED: "required";
};
export type BareMetal = (typeof BareMetal)[keyof typeof BareMetal];
export interface BaselineEbsBandwidthMbpsRequest {
  Min?: number;
  Max?: number;
}
export declare const BurstablePerformance: {
  readonly EXCLUDED: "excluded";
  readonly INCLUDED: "included";
  readonly REQUIRED: "required";
};
export type BurstablePerformance =
  (typeof BurstablePerformance)[keyof typeof BurstablePerformance];
export declare const CpuManufacturer: {
  readonly AMAZON_WEB_SERVICES: "amazon-web-services";
  readonly AMD: "amd";
  readonly INTEL: "intel";
};
export type CpuManufacturer =
  (typeof CpuManufacturer)[keyof typeof CpuManufacturer];
export declare const InstanceGeneration: {
  readonly CURRENT: "current";
  readonly PREVIOUS: "previous";
};
export type InstanceGeneration =
  (typeof InstanceGeneration)[keyof typeof InstanceGeneration];
export declare const LocalStorage: {
  readonly EXCLUDED: "excluded";
  readonly INCLUDED: "included";
  readonly REQUIRED: "required";
};
export type LocalStorage = (typeof LocalStorage)[keyof typeof LocalStorage];
export declare const LocalStorageType: {
  readonly HDD: "hdd";
  readonly SSD: "ssd";
};
export type LocalStorageType =
  (typeof LocalStorageType)[keyof typeof LocalStorageType];
export interface MemoryGiBPerVCpuRequest {
  Min?: number;
  Max?: number;
}
export interface MemoryMiBRequest {
  Min: number | undefined;
  Max?: number;
}
export interface NetworkBandwidthGbpsRequest {
  Min?: number;
  Max?: number;
}
export interface NetworkInterfaceCountRequest {
  Min?: number;
  Max?: number;
}
export interface TotalLocalStorageGBRequest {
  Min?: number;
  Max?: number;
}
export interface VCpuCountRequest {
  Min: number | undefined;
  Max?: number;
}
export interface InstanceRequirements {
  VCpuCount: VCpuCountRequest | undefined;
  MemoryMiB: MemoryMiBRequest | undefined;
  CpuManufacturers?: (CpuManufacturer | string)[];
  MemoryGiBPerVCpu?: MemoryGiBPerVCpuRequest;
  ExcludedInstanceTypes?: string[];
  InstanceGenerations?: (InstanceGeneration | string)[];
  SpotMaxPricePercentageOverLowestPrice?: number;
  OnDemandMaxPricePercentageOverLowestPrice?: number;
  BareMetal?: BareMetal | string;
  BurstablePerformance?: BurstablePerformance | string;
  RequireHibernateSupport?: boolean;
  NetworkInterfaceCount?: NetworkInterfaceCountRequest;
  LocalStorage?: LocalStorage | string;
  LocalStorageTypes?: (LocalStorageType | string)[];
  TotalLocalStorageGB?: TotalLocalStorageGBRequest;
  BaselineEbsBandwidthMbps?: BaselineEbsBandwidthMbpsRequest;
  AcceleratorTypes?: (AcceleratorType | string)[];
  AcceleratorCount?: AcceleratorCountRequest;
  AcceleratorManufacturers?: (AcceleratorManufacturer | string)[];
  AcceleratorNames?: (AcceleratorName | string)[];
  AcceleratorTotalMemoryMiB?: AcceleratorTotalMemoryMiBRequest;
  NetworkBandwidthGbps?: NetworkBandwidthGbpsRequest;
  AllowedInstanceTypes?: string[];
}
export interface LaunchTemplateOverrides {
  InstanceType?: string;
  WeightedCapacity?: string;
  LaunchTemplateSpecification?: LaunchTemplateSpecification;
  InstanceRequirements?: InstanceRequirements;
}
export interface LaunchTemplate {
  LaunchTemplateSpecification?: LaunchTemplateSpecification;
  Overrides?: LaunchTemplateOverrides[];
}
export interface MixedInstancesPolicy {
  LaunchTemplate?: LaunchTemplate;
  InstancesDistribution?: InstancesDistribution;
}
export interface Tag {
  ResourceId?: string;
  ResourceType?: string;
  Key: string | undefined;
  Value?: string;
  PropagateAtLaunch?: boolean;
}
export interface CreateAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  MixedInstancesPolicy?: MixedInstancesPolicy;
  InstanceId?: string;
  MinSize: number | undefined;
  MaxSize: number | undefined;
  DesiredCapacity?: number;
  DefaultCooldown?: number;
  AvailabilityZones?: string[];
  LoadBalancerNames?: string[];
  TargetGroupARNs?: string[];
  HealthCheckType?: string;
  HealthCheckGracePeriod?: number;
  PlacementGroup?: string;
  VPCZoneIdentifier?: string;
  TerminationPolicies?: string[];
  NewInstancesProtectedFromScaleIn?: boolean;
  CapacityRebalance?: boolean;
  LifecycleHookSpecificationList?: LifecycleHookSpecification[];
  Tags?: Tag[];
  ServiceLinkedRoleARN?: string;
  MaxInstanceLifetime?: number;
  Context?: string;
  DesiredCapacityType?: string;
  DefaultInstanceWarmup?: number;
  TrafficSources?: TrafficSourceIdentifier[];
}
export interface Ebs {
  SnapshotId?: string;
  VolumeSize?: number;
  VolumeType?: string;
  DeleteOnTermination?: boolean;
  Iops?: number;
  Encrypted?: boolean;
  Throughput?: number;
}
export interface BlockDeviceMapping {
  VirtualName?: string;
  DeviceName: string | undefined;
  Ebs?: Ebs;
  NoDevice?: boolean;
}
export interface InstanceMonitoring {
  Enabled?: boolean;
}
export declare const InstanceMetadataEndpointState: {
  readonly Disabled: "disabled";
  readonly Enabled: "enabled";
};
export type InstanceMetadataEndpointState =
  (typeof InstanceMetadataEndpointState)[keyof typeof InstanceMetadataEndpointState];
export declare const InstanceMetadataHttpTokensState: {
  readonly Optional: "optional";
  readonly Required: "required";
};
export type InstanceMetadataHttpTokensState =
  (typeof InstanceMetadataHttpTokensState)[keyof typeof InstanceMetadataHttpTokensState];
export interface InstanceMetadataOptions {
  HttpTokens?: InstanceMetadataHttpTokensState | string;
  HttpPutResponseHopLimit?: number;
  HttpEndpoint?: InstanceMetadataEndpointState | string;
}
export interface CreateLaunchConfigurationType {
  LaunchConfigurationName: string | undefined;
  ImageId?: string;
  KeyName?: string;
  SecurityGroups?: string[];
  ClassicLinkVPCId?: string;
  ClassicLinkVPCSecurityGroups?: string[];
  UserData?: string;
  InstanceId?: string;
  InstanceType?: string;
  KernelId?: string;
  RamdiskId?: string;
  BlockDeviceMappings?: BlockDeviceMapping[];
  InstanceMonitoring?: InstanceMonitoring;
  SpotPrice?: string;
  IamInstanceProfile?: string;
  EbsOptimized?: boolean;
  AssociatePublicIpAddress?: boolean;
  PlacementTenancy?: string;
  MetadataOptions?: InstanceMetadataOptions;
}
export interface CreateOrUpdateTagsType {
  Tags: Tag[] | undefined;
}
export declare class ResourceInUseFault extends __BaseException {
  readonly name: "ResourceInUseFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ResourceInUseFault, __BaseException>);
}
export interface DeleteAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  ForceDelete?: boolean;
}
export declare class ScalingActivityInProgressFault extends __BaseException {
  readonly name: "ScalingActivityInProgressFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ScalingActivityInProgressFault, __BaseException>
  );
}
export interface LaunchConfigurationNameType {
  LaunchConfigurationName: string | undefined;
}
export interface DeleteLifecycleHookAnswer {}
export interface DeleteLifecycleHookType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
}
export interface DeleteNotificationConfigurationType {
  AutoScalingGroupName: string | undefined;
  TopicARN: string | undefined;
}
export interface DeletePolicyType {
  AutoScalingGroupName?: string;
  PolicyName: string | undefined;
}
export interface DeleteScheduledActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionName: string | undefined;
}
export interface DeleteTagsType {
  Tags: Tag[] | undefined;
}
export interface DeleteWarmPoolAnswer {}
export interface DeleteWarmPoolType {
  AutoScalingGroupName: string | undefined;
  ForceDelete?: boolean;
}
export interface DescribeAccountLimitsAnswer {
  MaxNumberOfAutoScalingGroups?: number;
  MaxNumberOfLaunchConfigurations?: number;
  NumberOfAutoScalingGroups?: number;
  NumberOfLaunchConfigurations?: number;
}
export interface DescribeAdjustmentTypesAnswer {
  AdjustmentTypes?: AdjustmentType[];
}
export interface Filter {
  Name?: string;
  Values?: string[];
}
export interface AutoScalingGroupNamesType {
  AutoScalingGroupNames?: string[];
  NextToken?: string;
  MaxRecords?: number;
  Filters?: Filter[];
}
export interface EnabledMetric {
  Metric?: string;
  Granularity?: string;
}
export declare const LifecycleState: {
  readonly DETACHED: "Detached";
  readonly DETACHING: "Detaching";
  readonly ENTERING_STANDBY: "EnteringStandby";
  readonly IN_SERVICE: "InService";
  readonly PENDING: "Pending";
  readonly PENDING_PROCEED: "Pending:Proceed";
  readonly PENDING_WAIT: "Pending:Wait";
  readonly QUARANTINED: "Quarantined";
  readonly STANDBY: "Standby";
  readonly TERMINATED: "Terminated";
  readonly TERMINATING: "Terminating";
  readonly TERMINATING_PROCEED: "Terminating:Proceed";
  readonly TERMINATING_WAIT: "Terminating:Wait";
  readonly WARMED_HIBERNATED: "Warmed:Hibernated";
  readonly WARMED_PENDING: "Warmed:Pending";
  readonly WARMED_PENDING_PROCEED: "Warmed:Pending:Proceed";
  readonly WARMED_PENDING_WAIT: "Warmed:Pending:Wait";
  readonly WARMED_RUNNING: "Warmed:Running";
  readonly WARMED_STOPPED: "Warmed:Stopped";
  readonly WARMED_TERMINATED: "Warmed:Terminated";
  readonly WARMED_TERMINATING: "Warmed:Terminating";
  readonly WARMED_TERMINATING_PROCEED: "Warmed:Terminating:Proceed";
  readonly WARMED_TERMINATING_WAIT: "Warmed:Terminating:Wait";
};
export type LifecycleState =
  (typeof LifecycleState)[keyof typeof LifecycleState];
export interface Instance {
  InstanceId: string | undefined;
  InstanceType?: string;
  AvailabilityZone: string | undefined;
  LifecycleState: LifecycleState | string | undefined;
  HealthStatus: string | undefined;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  ProtectedFromScaleIn: boolean | undefined;
  WeightedCapacity?: string;
}
export interface SuspendedProcess {
  ProcessName?: string;
  SuspensionReason?: string;
}
export interface TagDescription {
  ResourceId?: string;
  ResourceType?: string;
  Key?: string;
  Value?: string;
  PropagateAtLaunch?: boolean;
}
export interface InstanceReusePolicy {
  ReuseOnScaleIn?: boolean;
}
export declare const WarmPoolState: {
  readonly Hibernated: "Hibernated";
  readonly Running: "Running";
  readonly Stopped: "Stopped";
};
export type WarmPoolState = (typeof WarmPoolState)[keyof typeof WarmPoolState];
export declare const WarmPoolStatus: {
  readonly PendingDelete: "PendingDelete";
};
export type WarmPoolStatus =
  (typeof WarmPoolStatus)[keyof typeof WarmPoolStatus];
export interface WarmPoolConfiguration {
  MaxGroupPreparedCapacity?: number;
  MinSize?: number;
  PoolState?: WarmPoolState | string;
  Status?: WarmPoolStatus | string;
  InstanceReusePolicy?: InstanceReusePolicy;
}
export interface AutoScalingGroup {
  AutoScalingGroupName: string | undefined;
  AutoScalingGroupARN?: string;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  MixedInstancesPolicy?: MixedInstancesPolicy;
  MinSize: number | undefined;
  MaxSize: number | undefined;
  DesiredCapacity: number | undefined;
  PredictedCapacity?: number;
  DefaultCooldown: number | undefined;
  AvailabilityZones: string[] | undefined;
  LoadBalancerNames?: string[];
  TargetGroupARNs?: string[];
  HealthCheckType: string | undefined;
  HealthCheckGracePeriod?: number;
  Instances?: Instance[];
  CreatedTime: Date | undefined;
  SuspendedProcesses?: SuspendedProcess[];
  PlacementGroup?: string;
  VPCZoneIdentifier?: string;
  EnabledMetrics?: EnabledMetric[];
  Status?: string;
  Tags?: TagDescription[];
  TerminationPolicies?: string[];
  NewInstancesProtectedFromScaleIn?: boolean;
  ServiceLinkedRoleARN?: string;
  MaxInstanceLifetime?: number;
  CapacityRebalance?: boolean;
  WarmPoolConfiguration?: WarmPoolConfiguration;
  WarmPoolSize?: number;
  Context?: string;
  DesiredCapacityType?: string;
  DefaultInstanceWarmup?: number;
  TrafficSources?: TrafficSourceIdentifier[];
}
export interface AutoScalingGroupsType {
  AutoScalingGroups: AutoScalingGroup[] | undefined;
  NextToken?: string;
}
export declare class InvalidNextToken extends __BaseException {
  readonly name: "InvalidNextToken";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidNextToken, __BaseException>);
}
export interface AutoScalingInstanceDetails {
  InstanceId: string | undefined;
  InstanceType?: string;
  AutoScalingGroupName: string | undefined;
  AvailabilityZone: string | undefined;
  LifecycleState: string | undefined;
  HealthStatus: string | undefined;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  ProtectedFromScaleIn: boolean | undefined;
  WeightedCapacity?: string;
}
export interface AutoScalingInstancesType {
  AutoScalingInstances?: AutoScalingInstanceDetails[];
  NextToken?: string;
}
export interface DescribeAutoScalingInstancesType {
  InstanceIds?: string[];
  MaxRecords?: number;
  NextToken?: string;
}
export interface DescribeAutoScalingNotificationTypesAnswer {
  AutoScalingNotificationTypes?: string[];
}
export interface DesiredConfiguration {
  LaunchTemplate?: LaunchTemplateSpecification;
  MixedInstancesPolicy?: MixedInstancesPolicy;
}
export declare const ScaleInProtectedInstances: {
  readonly Ignore: "Ignore";
  readonly Refresh: "Refresh";
  readonly Wait: "Wait";
};
export type ScaleInProtectedInstances =
  (typeof ScaleInProtectedInstances)[keyof typeof ScaleInProtectedInstances];
export declare const StandbyInstances: {
  readonly Ignore: "Ignore";
  readonly Terminate: "Terminate";
  readonly Wait: "Wait";
};
export type StandbyInstances =
  (typeof StandbyInstances)[keyof typeof StandbyInstances];
export interface RefreshPreferences {
  MinHealthyPercentage?: number;
  InstanceWarmup?: number;
  CheckpointPercentages?: number[];
  CheckpointDelay?: number;
  SkipMatching?: boolean;
  AutoRollback?: boolean;
  ScaleInProtectedInstances?: ScaleInProtectedInstances | string;
  StandbyInstances?: StandbyInstances | string;
}
export interface InstanceRefreshLivePoolProgress {
  PercentageComplete?: number;
  InstancesToUpdate?: number;
}
export interface InstanceRefreshWarmPoolProgress {
  PercentageComplete?: number;
  InstancesToUpdate?: number;
}
export interface InstanceRefreshProgressDetails {
  LivePoolProgress?: InstanceRefreshLivePoolProgress;
  WarmPoolProgress?: InstanceRefreshWarmPoolProgress;
}
export interface RollbackDetails {
  RollbackReason?: string;
  RollbackStartTime?: Date;
  PercentageCompleteOnRollback?: number;
  InstancesToUpdateOnRollback?: number;
  ProgressDetailsOnRollback?: InstanceRefreshProgressDetails;
}
export declare const InstanceRefreshStatus: {
  readonly Cancelled: "Cancelled";
  readonly Cancelling: "Cancelling";
  readonly Failed: "Failed";
  readonly InProgress: "InProgress";
  readonly Pending: "Pending";
  readonly RollbackFailed: "RollbackFailed";
  readonly RollbackInProgress: "RollbackInProgress";
  readonly RollbackSuccessful: "RollbackSuccessful";
  readonly Successful: "Successful";
};
export type InstanceRefreshStatus =
  (typeof InstanceRefreshStatus)[keyof typeof InstanceRefreshStatus];
export interface InstanceRefresh {
  InstanceRefreshId?: string;
  AutoScalingGroupName?: string;
  Status?: InstanceRefreshStatus | string;
  StatusReason?: string;
  StartTime?: Date;
  EndTime?: Date;
  PercentageComplete?: number;
  InstancesToUpdate?: number;
  ProgressDetails?: InstanceRefreshProgressDetails;
  Preferences?: RefreshPreferences;
  DesiredConfiguration?: DesiredConfiguration;
  RollbackDetails?: RollbackDetails;
}
export interface DescribeInstanceRefreshesAnswer {
  InstanceRefreshes?: InstanceRefresh[];
  NextToken?: string;
}
export interface DescribeInstanceRefreshesType {
  AutoScalingGroupName: string | undefined;
  InstanceRefreshIds?: string[];
  NextToken?: string;
  MaxRecords?: number;
}
export interface LaunchConfigurationNamesType {
  LaunchConfigurationNames?: string[];
  NextToken?: string;
  MaxRecords?: number;
}
export interface LaunchConfiguration {
  LaunchConfigurationName: string | undefined;
  LaunchConfigurationARN?: string;
  ImageId: string | undefined;
  KeyName?: string;
  SecurityGroups?: string[];
  ClassicLinkVPCId?: string;
  ClassicLinkVPCSecurityGroups?: string[];
  UserData?: string;
  InstanceType: string | undefined;
  KernelId?: string;
  RamdiskId?: string;
  BlockDeviceMappings?: BlockDeviceMapping[];
  InstanceMonitoring?: InstanceMonitoring;
  SpotPrice?: string;
  IamInstanceProfile?: string;
  CreatedTime: Date | undefined;
  EbsOptimized?: boolean;
  AssociatePublicIpAddress?: boolean;
  PlacementTenancy?: string;
  MetadataOptions?: InstanceMetadataOptions;
}
export interface LaunchConfigurationsType {
  LaunchConfigurations: LaunchConfiguration[] | undefined;
  NextToken?: string;
}
export interface LifecycleHook {
  LifecycleHookName?: string;
  AutoScalingGroupName?: string;
  LifecycleTransition?: string;
  NotificationTargetARN?: string;
  RoleARN?: string;
  NotificationMetadata?: string;
  HeartbeatTimeout?: number;
  GlobalTimeout?: number;
  DefaultResult?: string;
}
export interface DescribeLifecycleHooksAnswer {
  LifecycleHooks?: LifecycleHook[];
}
export interface DescribeLifecycleHooksType {
  AutoScalingGroupName: string | undefined;
  LifecycleHookNames?: string[];
}
export interface DescribeLifecycleHookTypesAnswer {
  LifecycleHookTypes?: string[];
}
export interface DescribeLoadBalancersRequest {
  AutoScalingGroupName: string | undefined;
  NextToken?: string;
  MaxRecords?: number;
}
export interface LoadBalancerState {
  LoadBalancerName?: string;
  State?: string;
}
export interface DescribeLoadBalancersResponse {
  LoadBalancers?: LoadBalancerState[];
  NextToken?: string;
}
export interface DescribeLoadBalancerTargetGroupsRequest {
  AutoScalingGroupName: string | undefined;
  NextToken?: string;
  MaxRecords?: number;
}
export interface LoadBalancerTargetGroupState {
  LoadBalancerTargetGroupARN?: string;
  State?: string;
}
export interface DescribeLoadBalancerTargetGroupsResponse {
  LoadBalancerTargetGroups?: LoadBalancerTargetGroupState[];
  NextToken?: string;
}
export interface MetricGranularityType {
  Granularity?: string;
}
export interface MetricCollectionType {
  Metric?: string;
}
export interface DescribeMetricCollectionTypesAnswer {
  Metrics?: MetricCollectionType[];
  Granularities?: MetricGranularityType[];
}
export interface NotificationConfiguration {
  AutoScalingGroupName?: string;
  TopicARN?: string;
  NotificationType?: string;
}
export interface DescribeNotificationConfigurationsAnswer {
  NotificationConfigurations: NotificationConfiguration[] | undefined;
  NextToken?: string;
}
export interface DescribeNotificationConfigurationsType {
  AutoScalingGroupNames?: string[];
  NextToken?: string;
  MaxRecords?: number;
}
export interface DescribePoliciesType {
  AutoScalingGroupName?: string;
  PolicyNames?: string[];
  PolicyTypes?: string[];
  NextToken?: string;
  MaxRecords?: number;
}
export declare const PredictiveScalingMaxCapacityBreachBehavior: {
  readonly HonorMaxCapacity: "HonorMaxCapacity";
  readonly IncreaseMaxCapacity: "IncreaseMaxCapacity";
};
export type PredictiveScalingMaxCapacityBreachBehavior =
  (typeof PredictiveScalingMaxCapacityBreachBehavior)[keyof typeof PredictiveScalingMaxCapacityBreachBehavior];
export interface MetricDimension {
  Name: string | undefined;
  Value: string | undefined;
}
export interface Metric {
  Namespace: string | undefined;
  MetricName: string | undefined;
  Dimensions?: MetricDimension[];
}
export interface MetricStat {
  Metric: Metric | undefined;
  Stat: string | undefined;
  Unit?: string;
}
export interface MetricDataQuery {
  Id: string | undefined;
  Expression?: string;
  MetricStat?: MetricStat;
  Label?: string;
  ReturnData?: boolean;
}
export interface PredictiveScalingCustomizedCapacityMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export interface PredictiveScalingCustomizedLoadMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export interface PredictiveScalingCustomizedScalingMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export declare const PredefinedLoadMetricType: {
  readonly ALBTargetGroupRequestCount: "ALBTargetGroupRequestCount";
  readonly ASGTotalCPUUtilization: "ASGTotalCPUUtilization";
  readonly ASGTotalNetworkIn: "ASGTotalNetworkIn";
  readonly ASGTotalNetworkOut: "ASGTotalNetworkOut";
};
export type PredefinedLoadMetricType =
  (typeof PredefinedLoadMetricType)[keyof typeof PredefinedLoadMetricType];
export interface PredictiveScalingPredefinedLoadMetric {
  PredefinedMetricType: PredefinedLoadMetricType | string | undefined;
  ResourceLabel?: string;
}
export declare const PredefinedMetricPairType: {
  readonly ALBRequestCount: "ALBRequestCount";
  readonly ASGCPUUtilization: "ASGCPUUtilization";
  readonly ASGNetworkIn: "ASGNetworkIn";
  readonly ASGNetworkOut: "ASGNetworkOut";
};
export type PredefinedMetricPairType =
  (typeof PredefinedMetricPairType)[keyof typeof PredefinedMetricPairType];
export interface PredictiveScalingPredefinedMetricPair {
  PredefinedMetricType: PredefinedMetricPairType | string | undefined;
  ResourceLabel?: string;
}
export declare const PredefinedScalingMetricType: {
  readonly ALBRequestCountPerTarget: "ALBRequestCountPerTarget";
  readonly ASGAverageCPUUtilization: "ASGAverageCPUUtilization";
  readonly ASGAverageNetworkIn: "ASGAverageNetworkIn";
  readonly ASGAverageNetworkOut: "ASGAverageNetworkOut";
};
export type PredefinedScalingMetricType =
  (typeof PredefinedScalingMetricType)[keyof typeof PredefinedScalingMetricType];
export interface PredictiveScalingPredefinedScalingMetric {
  PredefinedMetricType: PredefinedScalingMetricType | string | undefined;
  ResourceLabel?: string;
}
export interface PredictiveScalingMetricSpecification {
  TargetValue: number | undefined;
  PredefinedMetricPairSpecification?: PredictiveScalingPredefinedMetricPair;
  PredefinedScalingMetricSpecification?: PredictiveScalingPredefinedScalingMetric;
  PredefinedLoadMetricSpecification?: PredictiveScalingPredefinedLoadMetric;
  CustomizedScalingMetricSpecification?: PredictiveScalingCustomizedScalingMetric;
  CustomizedLoadMetricSpecification?: PredictiveScalingCustomizedLoadMetric;
  CustomizedCapacityMetricSpecification?: PredictiveScalingCustomizedCapacityMetric;
}
export declare const PredictiveScalingMode: {
  readonly ForecastAndScale: "ForecastAndScale";
  readonly ForecastOnly: "ForecastOnly";
};
export type PredictiveScalingMode =
  (typeof PredictiveScalingMode)[keyof typeof PredictiveScalingMode];
export interface PredictiveScalingConfiguration {
  MetricSpecifications: PredictiveScalingMetricSpecification[] | undefined;
  Mode?: PredictiveScalingMode | string;
  SchedulingBufferTime?: number;
  MaxCapacityBreachBehavior?:
    | PredictiveScalingMaxCapacityBreachBehavior
    | string;
  MaxCapacityBuffer?: number;
}
export interface StepAdjustment {
  MetricIntervalLowerBound?: number;
  MetricIntervalUpperBound?: number;
  ScalingAdjustment: number | undefined;
}
export interface TargetTrackingMetricStat {
  Metric: Metric | undefined;
  Stat: string | undefined;
  Unit?: string;
}
export interface TargetTrackingMetricDataQuery {
  Id: string | undefined;
  Expression?: string;
  MetricStat?: TargetTrackingMetricStat;
  Label?: string;
  ReturnData?: boolean;
}
export declare const MetricStatistic: {
  readonly Average: "Average";
  readonly Maximum: "Maximum";
  readonly Minimum: "Minimum";
  readonly SampleCount: "SampleCount";
  readonly Sum: "Sum";
};
export type MetricStatistic =
  (typeof MetricStatistic)[keyof typeof MetricStatistic];
export interface CustomizedMetricSpecification {
  MetricName?: string;
  Namespace?: string;
  Dimensions?: MetricDimension[];
  Statistic?: MetricStatistic | string;
  Unit?: string;
  Metrics?: TargetTrackingMetricDataQuery[];
}
export declare const MetricType: {
  readonly ALBRequestCountPerTarget: "ALBRequestCountPerTarget";
  readonly ASGAverageCPUUtilization: "ASGAverageCPUUtilization";
  readonly ASGAverageNetworkIn: "ASGAverageNetworkIn";
  readonly ASGAverageNetworkOut: "ASGAverageNetworkOut";
};
export type MetricType = (typeof MetricType)[keyof typeof MetricType];
export interface PredefinedMetricSpecification {
  PredefinedMetricType: MetricType | string | undefined;
  ResourceLabel?: string;
}
export interface TargetTrackingConfiguration {
  PredefinedMetricSpecification?: PredefinedMetricSpecification;
  CustomizedMetricSpecification?: CustomizedMetricSpecification;
  TargetValue: number | undefined;
  DisableScaleIn?: boolean;
}
export interface ScalingPolicy {
  AutoScalingGroupName?: string;
  PolicyName?: string;
  PolicyARN?: string;
  PolicyType?: string;
  AdjustmentType?: string;
  MinAdjustmentStep?: number;
  MinAdjustmentMagnitude?: number;
  ScalingAdjustment?: number;
  Cooldown?: number;
  StepAdjustments?: StepAdjustment[];
  MetricAggregationType?: string;
  EstimatedInstanceWarmup?: number;
  Alarms?: Alarm[];
  TargetTrackingConfiguration?: TargetTrackingConfiguration;
  Enabled?: boolean;
  PredictiveScalingConfiguration?: PredictiveScalingConfiguration;
}
export interface PoliciesType {
  ScalingPolicies?: ScalingPolicy[];
  NextToken?: string;
}
export interface DescribeScalingActivitiesType {
  ActivityIds?: string[];
  AutoScalingGroupName?: string;
  IncludeDeletedGroups?: boolean;
  MaxRecords?: number;
  NextToken?: string;
}
export interface ProcessType {
  ProcessName: string | undefined;
}
export interface ProcessesType {
  Processes?: ProcessType[];
}
export interface DescribeScheduledActionsType {
  AutoScalingGroupName?: string;
  ScheduledActionNames?: string[];
  StartTime?: Date;
  EndTime?: Date;
  NextToken?: string;
  MaxRecords?: number;
}
export interface ScheduledUpdateGroupAction {
  AutoScalingGroupName?: string;
  ScheduledActionName?: string;
  ScheduledActionARN?: string;
  Time?: Date;
  StartTime?: Date;
  EndTime?: Date;
  Recurrence?: string;
  MinSize?: number;
  MaxSize?: number;
  DesiredCapacity?: number;
  TimeZone?: string;
}
export interface ScheduledActionsType {
  ScheduledUpdateGroupActions?: ScheduledUpdateGroupAction[];
  NextToken?: string;
}
export interface DescribeTagsType {
  Filters?: Filter[];
  NextToken?: string;
  MaxRecords?: number;
}
export interface TagsType {
  Tags?: TagDescription[];
  NextToken?: string;
}
export interface DescribeTerminationPolicyTypesAnswer {
  TerminationPolicyTypes?: string[];
}
export interface DescribeTrafficSourcesRequest {
  AutoScalingGroupName: string | undefined;
  TrafficSourceType?: string;
  NextToken?: string;
  MaxRecords?: number;
}
export interface TrafficSourceState {
  TrafficSource?: string;
  State?: string;
  Identifier?: string;
  Type?: string;
}
export interface DescribeTrafficSourcesResponse {
  TrafficSources?: TrafficSourceState[];
  NextToken?: string;
}
export interface DescribeWarmPoolAnswer {
  WarmPoolConfiguration?: WarmPoolConfiguration;
  Instances?: Instance[];
  NextToken?: string;
}
export interface DescribeWarmPoolType {
  AutoScalingGroupName: string | undefined;
  MaxRecords?: number;
  NextToken?: string;
}
export interface DetachInstancesAnswer {
  Activities?: Activity[];
}
export interface DetachInstancesQuery {
  InstanceIds?: string[];
  AutoScalingGroupName: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface DetachLoadBalancersResultType {}
export interface DetachLoadBalancersType {
  AutoScalingGroupName: string | undefined;
  LoadBalancerNames: string[] | undefined;
}
export interface DetachLoadBalancerTargetGroupsResultType {}
export interface DetachLoadBalancerTargetGroupsType {
  AutoScalingGroupName: string | undefined;
  TargetGroupARNs: string[] | undefined;
}
export interface DetachTrafficSourcesResultType {}
export interface DetachTrafficSourcesType {
  AutoScalingGroupName: string | undefined;
  TrafficSources: TrafficSourceIdentifier[] | undefined;
}
export interface DisableMetricsCollectionQuery {
  AutoScalingGroupName: string | undefined;
  Metrics?: string[];
}
export interface EnableMetricsCollectionQuery {
  AutoScalingGroupName: string | undefined;
  Metrics?: string[];
  Granularity: string | undefined;
}
export interface EnterStandbyAnswer {
  Activities?: Activity[];
}
export interface EnterStandbyQuery {
  InstanceIds?: string[];
  AutoScalingGroupName: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface ExecutePolicyType {
  AutoScalingGroupName?: string;
  PolicyName: string | undefined;
  HonorCooldown?: boolean;
  MetricValue?: number;
  BreachThreshold?: number;
}
export interface ExitStandbyAnswer {
  Activities?: Activity[];
}
export interface ExitStandbyQuery {
  InstanceIds?: string[];
  AutoScalingGroupName: string | undefined;
}
export interface CapacityForecast {
  Timestamps: Date[] | undefined;
  Values: number[] | undefined;
}
export interface LoadForecast {
  Timestamps: Date[] | undefined;
  Values: number[] | undefined;
  MetricSpecification: PredictiveScalingMetricSpecification | undefined;
}
export interface GetPredictiveScalingForecastAnswer {
  LoadForecast: LoadForecast[] | undefined;
  CapacityForecast: CapacityForecast | undefined;
  UpdateTime: Date | undefined;
}
export interface GetPredictiveScalingForecastType {
  AutoScalingGroupName: string | undefined;
  PolicyName: string | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
}
export interface PutLifecycleHookAnswer {}
export interface PutLifecycleHookType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleTransition?: string;
  RoleARN?: string;
  NotificationTargetARN?: string;
  NotificationMetadata?: string;
  HeartbeatTimeout?: number;
  DefaultResult?: string;
}
export interface PutNotificationConfigurationType {
  AutoScalingGroupName: string | undefined;
  TopicARN: string | undefined;
  NotificationTypes: string[] | undefined;
}
export interface PolicyARNType {
  PolicyARN?: string;
  Alarms?: Alarm[];
}
export interface PutScalingPolicyType {
  AutoScalingGroupName: string | undefined;
  PolicyName: string | undefined;
  PolicyType?: string;
  AdjustmentType?: string;
  MinAdjustmentStep?: number;
  MinAdjustmentMagnitude?: number;
  ScalingAdjustment?: number;
  Cooldown?: number;
  MetricAggregationType?: string;
  StepAdjustments?: StepAdjustment[];
  EstimatedInstanceWarmup?: number;
  TargetTrackingConfiguration?: TargetTrackingConfiguration;
  Enabled?: boolean;
  PredictiveScalingConfiguration?: PredictiveScalingConfiguration;
}
export interface PutScheduledUpdateGroupActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionName: string | undefined;
  Time?: Date;
  StartTime?: Date;
  EndTime?: Date;
  Recurrence?: string;
  MinSize?: number;
  MaxSize?: number;
  DesiredCapacity?: number;
  TimeZone?: string;
}
export interface PutWarmPoolAnswer {}
export interface PutWarmPoolType {
  AutoScalingGroupName: string | undefined;
  MaxGroupPreparedCapacity?: number;
  MinSize?: number;
  PoolState?: WarmPoolState | string;
  InstanceReusePolicy?: InstanceReusePolicy;
}
export interface RecordLifecycleActionHeartbeatAnswer {}
export interface RecordLifecycleActionHeartbeatType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleActionToken?: string;
  InstanceId?: string;
}
export interface ScalingProcessQuery {
  AutoScalingGroupName: string | undefined;
  ScalingProcesses?: string[];
}
export declare class IrreversibleInstanceRefreshFault extends __BaseException {
  readonly name: "IrreversibleInstanceRefreshFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      IrreversibleInstanceRefreshFault,
      __BaseException
    >
  );
}
export interface RollbackInstanceRefreshAnswer {
  InstanceRefreshId?: string;
}
export interface RollbackInstanceRefreshType {
  AutoScalingGroupName?: string;
}
export interface SetDesiredCapacityType {
  AutoScalingGroupName: string | undefined;
  DesiredCapacity: number | undefined;
  HonorCooldown?: boolean;
}
export interface SetInstanceHealthQuery {
  InstanceId: string | undefined;
  HealthStatus: string | undefined;
  ShouldRespectGracePeriod?: boolean;
}
export interface SetInstanceProtectionAnswer {}
export interface SetInstanceProtectionQuery {
  InstanceIds: string[] | undefined;
  AutoScalingGroupName: string | undefined;
  ProtectedFromScaleIn: boolean | undefined;
}
export declare class InstanceRefreshInProgressFault extends __BaseException {
  readonly name: "InstanceRefreshInProgressFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InstanceRefreshInProgressFault, __BaseException>
  );
}
export interface StartInstanceRefreshAnswer {
  InstanceRefreshId?: string;
}
export declare const RefreshStrategy: {
  readonly Rolling: "Rolling";
};
export type RefreshStrategy =
  (typeof RefreshStrategy)[keyof typeof RefreshStrategy];
export interface StartInstanceRefreshType {
  AutoScalingGroupName: string | undefined;
  Strategy?: RefreshStrategy | string;
  DesiredConfiguration?: DesiredConfiguration;
  Preferences?: RefreshPreferences;
}
export interface TerminateInstanceInAutoScalingGroupType {
  InstanceId: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface UpdateAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  MixedInstancesPolicy?: MixedInstancesPolicy;
  MinSize?: number;
  MaxSize?: number;
  DesiredCapacity?: number;
  DefaultCooldown?: number;
  AvailabilityZones?: string[];
  HealthCheckType?: string;
  HealthCheckGracePeriod?: number;
  PlacementGroup?: string;
  VPCZoneIdentifier?: string;
  TerminationPolicies?: string[];
  NewInstancesProtectedFromScaleIn?: boolean;
  ServiceLinkedRoleARN?: string;
  MaxInstanceLifetime?: number;
  CapacityRebalance?: boolean;
  Context?: string;
  DesiredCapacityType?: string;
  DefaultInstanceWarmup?: number;
}
