"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDynamoDBForDocClient = void 0;
const config_1 = require("../config");
const getDynamoDBForDocClient = (j, v2DocClientNewExpression, { v2ClientLocalName }) => {
    // Return value in `service` param if it's provided.
    if (v2DocClientNewExpression.node.arguments.length > 0) {
        const params = v2DocClientNewExpression.node.arguments[0];
        if (params.type === "ObjectExpression") {
            const serviceProperty = params.properties.find((property) => {
                if (!config_1.OBJECT_PROPERTY_TYPE_LIST.includes(property.type)) {
                    return false;
                }
                const propertyKey = property.key;
                if (propertyKey.type !== "Identifier") {
                    return false;
                }
                if (propertyKey.name === "service") {
                    return true;
                }
            });
            if (serviceProperty) {
                // The value here will work in most Document Client creations.
                // Adding typecast to skip TypeScript errors.
                return serviceProperty.value;
            }
        }
    }
    return j.newExpression(v2ClientLocalName ? j.identifier(v2ClientLocalName) : j.identifier(config_1.DYNAMODB), v2DocClientNewExpression.node.arguments);
};
exports.getDynamoDBForDocClient = getDynamoDBForDocClient;
