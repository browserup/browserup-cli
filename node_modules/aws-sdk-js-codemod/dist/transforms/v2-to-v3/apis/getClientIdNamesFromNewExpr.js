"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClientIdNamesFromNewExpr = void 0;
const config_1 = require("../config");
const utils_1 = require("../utils");
const getNamesFromVariableDeclarator = (j, source, newExpression) => source
    .find(j.VariableDeclarator, {
    id: { type: "Identifier" },
    init: newExpression,
})
    .nodes()
    .map((variableDeclarator) => variableDeclarator.id.name);
const getNamesFromAssignmentPattern = (j, source, newExpression) => source
    .find(j.AssignmentPattern, {
    left: { type: "Identifier" },
    right: newExpression,
})
    .nodes()
    .map((assignmentPattern) => assignmentPattern.left.name);
const getClientIdNamesFromNewExpr = (j, source, { v2ClientName, v2ClientLocalName, v2GlobalName }) => {
    const namesFromGlobalModule = [];
    const namesFromServiceModule = [];
    for (const getNames of [getNamesFromVariableDeclarator, getNamesFromAssignmentPattern]) {
        if (v2GlobalName) {
            namesFromGlobalModule.push(...getNames(j, source, (0, utils_1.getClientNewExpression)({ v2GlobalName, v2ClientName })));
            if (v2ClientName === config_1.DYNAMODB) {
                namesFromGlobalModule.push(...getNames(j, source, (0, utils_1.getDocClientNewExpression)({ v2GlobalName })));
            }
        }
        namesFromServiceModule.push(...getNames(j, source, (0, utils_1.getClientNewExpression)({ v2ClientLocalName })));
        if (v2ClientName === config_1.DYNAMODB) {
            namesFromServiceModule.push(...getNames(j, source, (0, utils_1.getDocClientNewExpression)({ v2ClientLocalName })));
        }
    }
    return [...new Set([...namesFromGlobalModule, ...namesFromServiceModule])];
};
exports.getClientIdNamesFromNewExpr = getClientIdNamesFromNewExpr;
