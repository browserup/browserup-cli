"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addNotSupportedComments = void 0;
const config_1 = require("../config");
const getClientIdentifiers_1 = require("./getClientIdentifiers");
const getClientWaiterCallExpression_1 = require("./getClientWaiterCallExpression");
const getClientWaiterStates_1 = require("./getClientWaiterStates");
const getS3UploadCallExpression_1 = require("./getS3UploadCallExpression");
const addNotSupportedComments = (j, source, options) => {
    const clientIdentifiers = (0, getClientIdentifiers_1.getClientIdentifiers)(j, source, options);
    for (const clientId of clientIdentifiers) {
        const waiterStates = (0, getClientWaiterStates_1.getClientWaiterStates)(j, source, options);
        for (const waiterState of waiterStates) {
            source
                .find(j.CallExpression, (0, getClientWaiterCallExpression_1.getClientWaiterCallExpression)(clientId, waiterState))
                .forEach((callExpression) => {
                const args = callExpression.node.arguments;
                if (config_1.FUNCTION_TYPE_LIST.includes(args[args.length - 1].type)) {
                    const comments = callExpression.node.comments || [];
                    comments.push(j.commentLine(" Waiters with callbacks are not supported in AWS SDK for JavaScript (v3)."));
                    comments.push(j.commentLine(" Please convert to `await client.waitFor(state, params).promise()`, and re-run aws-sdk-js-codemod."));
                    callExpression.node.comments = comments;
                }
            });
        }
    }
    if (options.v2ClientName === "S3") {
        for (const clientId of clientIdentifiers) {
            source
                .find(j.CallExpression, (0, getS3UploadCallExpression_1.getS3UploadCallExpression)(clientId))
                .forEach((callExpression) => {
                const args = callExpression.node.arguments;
                if (config_1.FUNCTION_TYPE_LIST.includes(args[args.length - 1].type)) {
                    const comments = callExpression.node.comments || [];
                    comments.push(j.commentLine(" S3 ManagedUpload with callbacks are not supported in AWS SDK for JavaScript (v3)."));
                    comments.push(j.commentLine(" Please convert to `await client.upload(params, options).promise()`, and re-run aws-sdk-js-codemod."));
                    callExpression.node.comments = comments;
                }
            });
        }
    }
};
exports.addNotSupportedComments = addNotSupportedComments;
