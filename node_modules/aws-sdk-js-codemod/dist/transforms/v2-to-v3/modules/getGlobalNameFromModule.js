"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGlobalNameFromModule = void 0;
const config_1 = require("../config");
const getImportEqualsDeclarationType_1 = require("./getImportEqualsDeclarationType");
const getImportSpecifiers_1 = require("./getImportSpecifiers");
const hasRequire_1 = require("./hasRequire");
const getGlobalNameFromModule = (j, source) => {
    if ((0, hasRequire_1.hasRequire)(j, source)) {
        const requireIdentifiers = source
            .find(j.VariableDeclarator, {
            id: { type: "Identifier" },
            init: {
                type: "CallExpression",
                callee: { type: "Identifier", name: "require" },
                arguments: [{ value: config_1.PACKAGE_NAME }],
            },
        })
            .nodes();
        if (requireIdentifiers.length > 0) {
            return (requireIdentifiers[0]?.id).name;
        }
    }
    const importDefaultSpecifiers = (0, getImportSpecifiers_1.getImportSpecifiers)(j, source, config_1.PACKAGE_NAME).filter((specifier) => ["ImportDefaultSpecifier", "ImportNamespaceSpecifier"].includes(specifier?.type));
    if (importDefaultSpecifiers.length > 0) {
        return (importDefaultSpecifiers[0]?.local).name;
    }
    const importEqualsDeclarations = source.find(j.TSImportEqualsDeclaration, (0, getImportEqualsDeclarationType_1.getImportEqualsDeclarationType)(config_1.PACKAGE_NAME));
    if (importEqualsDeclarations.length > 0) {
        return importEqualsDeclarations.nodes()[0]?.id?.name;
    }
    return undefined;
};
exports.getGlobalNameFromModule = getGlobalNameFromModule;
