"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRequireDeclarator = void 0;
const config_1 = require("../config");
const utils_1 = require("../utils");
const getRequireDeclaratorsWithIdentifier_1 = require("./getRequireDeclaratorsWithIdentifier");
const getRequireDeclaratorsWithObjectPattern_1 = require("./getRequireDeclaratorsWithObjectPattern");
const getRequireDeclaratorsWithProperty_1 = require("./getRequireDeclaratorsWithProperty");
const getRequireDeclarator = (j, source, { v2ClientName, v2ClientLocalName, v2GlobalName }) => {
    if (v2GlobalName) {
        const requireDeclaratorsWithIdentifier = (0, getRequireDeclaratorsWithIdentifier_1.getRequireDeclaratorsWithIdentifier)(j, source, {
            identifierName: v2GlobalName,
            sourceValue: config_1.PACKAGE_NAME,
        });
        if (requireDeclaratorsWithIdentifier.size() > 0) {
            return requireDeclaratorsWithIdentifier;
        }
    }
    const requireDeclaratorsWithObjectPattern = (0, getRequireDeclaratorsWithObjectPattern_1.getRequireDeclaratorsWithObjectPattern)(j, source, {
        identifierName: v2ClientLocalName,
        sourceValue: config_1.PACKAGE_NAME,
    });
    if (requireDeclaratorsWithObjectPattern.size() > 0) {
        return requireDeclaratorsWithObjectPattern;
    }
    const requireDeclaratorsWithProperty = (0, getRequireDeclaratorsWithProperty_1.getRequireDeclaratorsWithProperty)(j, source, {
        identifierName: v2ClientName,
        sourceValue: config_1.PACKAGE_NAME,
    });
    if (requireDeclaratorsWithProperty.size() > 0) {
        return requireDeclaratorsWithProperty;
    }
    const requireDeclaratorsWithIdentifier = (0, getRequireDeclaratorsWithIdentifier_1.getRequireDeclaratorsWithIdentifier)(j, source, {
        identifierName: v2ClientLocalName,
        sourceValue: (0, utils_1.getClientDeepImportPath)(v2ClientName),
    });
    if (requireDeclaratorsWithIdentifier.size() > 0) {
        return requireDeclaratorsWithIdentifier;
    }
};
exports.getRequireDeclarator = getRequireDeclarator;
