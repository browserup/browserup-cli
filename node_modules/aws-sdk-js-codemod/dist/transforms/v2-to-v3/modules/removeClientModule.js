"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeClientModule = void 0;
const config_1 = require("../config");
const ts_type_1 = require("../ts-type");
const utils_1 = require("../utils");
const hasImportEquals_1 = require("./hasImportEquals");
const hasRequire_1 = require("./hasRequire");
const removeImportDefault_1 = require("./removeImportDefault");
const removeImportEquals_1 = require("./removeImportEquals");
const removeImportNamed_1 = require("./removeImportNamed");
const removeRequireIdentifier_1 = require("./removeRequireIdentifier");
const removeRequireObjectProperty_1 = require("./removeRequireObjectProperty");
const removeRequireProperty_1 = require("./removeRequireProperty");
const removeClientModule = (j, source, options) => {
    const { v2ClientName, v2ClientLocalName } = options;
    const deepImportPath = (0, utils_1.getClientDeepImportPath)(v2ClientName);
    const defaultOptions = { localName: v2ClientLocalName, sourceValue: deepImportPath };
    const namedOptions = { localName: v2ClientLocalName, sourceValue: config_1.PACKAGE_NAME };
    if ((0, hasRequire_1.hasRequire)(j, source)) {
        (0, removeRequireIdentifier_1.removeRequireIdentifier)(j, source, defaultOptions);
        (0, removeRequireObjectProperty_1.removeRequireObjectProperty)(j, source, namedOptions);
        (0, removeRequireProperty_1.removeRequireProperty)(j, source, { ...namedOptions, propertyName: v2ClientName });
    }
    else if ((0, hasImportEquals_1.hasImportEquals)(j, source)) {
        (0, removeImportEquals_1.removeImportEquals)(j, source, defaultOptions);
    }
    else {
        (0, removeImportDefault_1.removeImportDefault)(j, source, defaultOptions);
        (0, removeImportNamed_1.removeImportNamed)(j, source, namedOptions);
        const clientTypeNames = (0, ts_type_1.getClientTypeNames)(j, source, options);
        for (const clientTypeName of clientTypeNames) {
            (0, removeImportNamed_1.removeImportNamed)(j, source, {
                localName: clientTypeName,
                sourceValue: deepImportPath,
            });
        }
    }
};
exports.removeClientModule = removeClientModule;
