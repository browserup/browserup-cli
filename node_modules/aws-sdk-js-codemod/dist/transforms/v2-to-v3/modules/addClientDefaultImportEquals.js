"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addClientDefaultImportEquals = void 0;
const utils_1 = require("../utils");
const getImportEqualsDeclaration_1 = require("./getImportEqualsDeclaration");
const getImportEqualsDeclarationType_1 = require("./getImportEqualsDeclarationType");
const getImportEqualsLocalNameSuffix_1 = require("./getImportEqualsLocalNameSuffix");
const addClientDefaultImportEquals = (j, source, { v2ClientLocalName, v2ClientName, v2GlobalName, v3ClientPackageName }) => {
    const localNameSuffix = (0, getImportEqualsLocalNameSuffix_1.getImportEqualsLocalNameSuffix)(v2ClientName, v3ClientPackageName);
    const defaultLocalName = (0, utils_1.getDefaultLocalName)(localNameSuffix);
    const existingImportEquals = source.find(j.TSImportEqualsDeclaration, (0, getImportEqualsDeclarationType_1.getImportEqualsDeclarationType)(v3ClientPackageName));
    if (existingImportEquals.size()) {
        if (existingImportEquals
            .nodes()
            .some((importEqualsDeclaration) => importEqualsDeclaration.id.name === defaultLocalName)) {
            return;
        }
    }
    // Insert after global, or service import equals.
    const v2ImportEqualsDeclaration = (0, getImportEqualsDeclaration_1.getImportEqualsDeclaration)(j, source, {
        v2ClientName,
        v2ClientLocalName,
        v2GlobalName,
    }).at(0);
    const v3importEqualsDeclaration = j.tsImportEqualsDeclaration(j.identifier(defaultLocalName), j.tsExternalModuleReference(j.stringLiteral(v3ClientPackageName)));
    if (v2ImportEqualsDeclaration && v2ImportEqualsDeclaration.nodes().length > 0) {
        v2ImportEqualsDeclaration.at(0).insertAfter(v3importEqualsDeclaration);
    }
    else {
        // Unreachable code, throw error
        throw new Error("Base Import Equals Declaration not found to insert new Import Declaration.\n" +
            "Please report your use case on https://github.com/awslabs/aws-sdk-js-codemod");
    }
};
exports.addClientDefaultImportEquals = addClientDefaultImportEquals;
