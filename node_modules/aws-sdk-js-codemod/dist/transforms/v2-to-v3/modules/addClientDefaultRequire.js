"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addClientDefaultRequire = void 0;
const utils_1 = require("../utils");
const getRequireDeclarator_1 = require("./getRequireDeclarator");
const getRequireDeclarators_1 = require("./getRequireDeclarators");
const addClientDefaultRequire = (j, source, { v2ClientName, v2ClientLocalName, v3ClientPackageName, v2GlobalName }) => {
    const defaultLocalName = (0, utils_1.getDefaultLocalName)(v2ClientLocalName);
    const existingRequires = (0, getRequireDeclarators_1.getRequireDeclarators)(j, source, v3ClientPackageName);
    if (existingRequires &&
        existingRequires.nodes().length > 0 &&
        existingRequires
            .nodes()
            .find((variableDeclarator) => variableDeclarator.id.type === "Identifier" &&
            variableDeclarator.id.name === defaultLocalName)) {
        return;
    }
    // prettier-ignore
    const v2RequireDeclarator = (0, getRequireDeclarator_1.getRequireDeclarator)(j, source, { v2ClientName, v2ClientLocalName, v2GlobalName });
    const v3RequireDeclarator = j.variableDeclarator(j.identifier(defaultLocalName), j.callExpression(j.identifier("require"), [j.literal(v3ClientPackageName)]));
    if (v2RequireDeclarator && v2RequireDeclarator.nodes().length > 0) {
        v2RequireDeclarator.insertAfter(v3RequireDeclarator);
    }
    else {
        // Unreachable code, throw error
        throw new Error("Base Require Declarator not found to insert new Require Declarator.\n" +
            "Please report your use case on https://github.com/awslabs/aws-sdk-js-codemod");
    }
};
exports.addClientDefaultRequire = addClientDefaultRequire;
