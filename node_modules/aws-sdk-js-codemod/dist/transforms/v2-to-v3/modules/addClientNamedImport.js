"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addClientNamedImport = void 0;
const getImportDeclaration_1 = require("./getImportDeclaration");
const getImportSpecifier_1 = require("./getImportSpecifier");
const getImportSpecifiers_1 = require("./getImportSpecifiers");
const importSpecifierCompareFn_1 = require("./importSpecifierCompareFn");
const addClientNamedImport = (j, source, options) => {
    const { importedName, v2ClientName, v2ClientLocalName, v3ClientPackageName } = options;
    const localName = options.localName ?? importedName;
    const importDeclarations = source.find(j.ImportDeclaration, {
        source: { value: v3ClientPackageName },
    });
    if (importDeclarations.size()) {
        const allImportSpecifiers = (0, getImportSpecifiers_1.getImportSpecifiers)(j, source, v3ClientPackageName).filter((importSpecifier) => importSpecifier?.type === "ImportSpecifier");
        if (allImportSpecifiers.find((specifier) => specifier?.imported?.name === importedName && specifier?.local?.name === localName)) {
            return;
        }
        const firstImportDeclSpecifiers = importDeclarations.nodes()[0].specifiers;
        if (firstImportDeclSpecifiers) {
            firstImportDeclSpecifiers.push((0, getImportSpecifier_1.getImportSpecifier)(j, { importedName, localName }));
            firstImportDeclSpecifiers.sort(importSpecifierCompareFn_1.importSpecifierCompareFn);
            return;
        }
    }
    // Insert after global import, or service import.
    const v2ImportDeclaration = (0, getImportDeclaration_1.getImportDeclaration)(j, source, {
        v2ClientName,
        v2ClientLocalName,
    });
    const v3ImportDeclaration = j.importDeclaration([(0, getImportSpecifier_1.getImportSpecifier)(j, { importedName, localName })], j.stringLiteral(v3ClientPackageName));
    if (v2ImportDeclaration && v2ImportDeclaration.nodes().length > 0) {
        v2ImportDeclaration.at(0).insertAfter(v3ImportDeclaration);
    }
    else {
        // Unreachable code, throw error
        throw new Error("Base Import Declaration not found to insert new Import Declaration.\n" +
            "Please report your use case on https://github.com/awslabs/aws-sdk-js-codemod");
    }
};
exports.addClientNamedImport = addClientNamedImport;
