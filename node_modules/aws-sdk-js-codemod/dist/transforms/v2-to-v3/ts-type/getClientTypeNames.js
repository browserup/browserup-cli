"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClientTypeNames = void 0;
const modules_1 = require("../modules");
const utils_1 = require("../utils");
const getRightIdentifierName = (j, source, tsTypeRef) => source
    .find(j.TSTypeReference, tsTypeRef)
    .nodes()
    .map((node) => node.typeName.right)
    .filter((node) => node.type === "Identifier")
    .map((node) => node.name);
const getClientTypeNames = (j, source, { v2ClientLocalName, v2ClientName, v2GlobalName }) => {
    const clientTypeNames = [];
    if (v2GlobalName) {
        const globalTSTypeRef = (0, utils_1.getClientTSTypeRef)({
            v2ClientName,
            v2GlobalName,
            withoutRightSection: true,
        });
        clientTypeNames.push(...getRightIdentifierName(j, source, globalTSTypeRef));
    }
    const clientTSTypeRef = (0, utils_1.getClientTSTypeRef)({ v2ClientLocalName, withoutRightSection: true });
    clientTypeNames.push(...getRightIdentifierName(j, source, clientTSTypeRef));
    clientTypeNames.push(...(0, modules_1.getImportSpecifiers)(j, source, (0, utils_1.getClientDeepImportPath)(v2ClientName))
        .filter((importSpecifier) => importSpecifier.type === "ImportSpecifier" &&
        importSpecifier.local &&
        importSpecifier.local.type === "Identifier")
        .map((importSpecifier) => importSpecifier.local.name));
    return [...new Set(clientTypeNames)];
};
exports.getClientTypeNames = getClientTypeNames;
