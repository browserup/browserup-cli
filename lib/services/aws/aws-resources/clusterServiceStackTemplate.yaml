AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Browserup cluster services (ECS services and tasks)
Parameters:
  ServicesImageTag:
    Type: String
  ClusterPublicIP:
    Type: String
  S3MinioIngressPort:
    Type: Number
  WcIngressPort:
    Type: Number
  GrafanaIngressPort:
    Type: Number
  S3MinioAccessKeyID:
    Type: String
    Description: >
      S3 minio access key id
  S3MinioSecretAccessKeyID:
    Type: String
    Description: >
      S3 minio secret access key id
  InitialApiToken:
    Type: String
    Description: >
      Initial api token
    Default: ''
  MinionsKeyName:
    Type: String
    Description: >
      Optional key pair name to use for minions cluster, in case it doesn't exist in cluster it will be ignored.
    Default: ''
  AwsAccessKeyId:
    Type: String
    Description: >
      Aws Access Key Id
  AwsSecretAccessKey:
    Type: String
    Description: >
      Aws Secret Access Key
  ClusterVpcId:
    Type: String
    Description: >
      Cluster VPC id
  ClusterName:
    Type: String
    Description: >
      Browserup Cluster name
  ClusterSgId:
    Type: String
    Description: >
      Browserup SG Id
  TaskDefinitionsRoleArn:
    Type: String
    Description: >
      Task definitions role arn
  InstanceProfileArn:
    Type: String
    Description: >
      Instance profile arn
  AdminEmails:
    Type: String
    Description: >
      Comma separated admin emails array
  EcsInstanceRoleArn:
    Type: String
    Description: >
      Ecs instance role arn
  LogMaxSize:
    Type: String
    Description: >
      'max-size' param of log driver for a container. The maximum size of the log before it is rolled. A positive integer plus a modifier representing the unit of measure (k, m, or g). Defaults to -1 (unlimited).
    Default: '10m'
  LogMaxFile:
    Type: String
    Description: >
      'max-file' param of log driver for a container. The maximum number of log files that can be present. If rolling the logs creates excess files, the oldest file is removed. Only effective when max-size is also set. A positive integer.
    Default: '10'
  AllowSshAccessToMinionFromCidr:
    Type: String
    Default: '0.0.0.0/32'
  WebconsoleProtocol:
    Type: String
    Default: 'http'
  PrivateSubnetIDs:
    Type: CommaDelimitedList
  PublicSubnetIDs:
    Type: CommaDelimitedList
  PrivateDnsNamespaceName:
    Type: String
  StandardImageVersionTag:
    Type: String
  PrivateNamespaceId:
    Type: String
  ForceRecreateNginxFlag:
    Type: String
Conditions:
  IsTlsForWebconsoleEnabledCond: !Equals [ !Ref WebconsoleProtocol, 'https' ]

Resources:
  InfluxTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # INFLUXDB
        - Image: docker.io/influxdb:1.8.10
          Name: influxdb
          Environment:
            - Name: INFLUXDB_DB
              Value: browserup
            - Name: INFLUXDB_USER
              Value: browserup
            - Name: INFLUXDB_USER_PASSWORD
              Value: just_testing
            - Name: INFLUXDB_DATA_INDEX_VERSION
              Value: tsi1
            - Name: INFLUXDB_DATA_TRACE_LOGGING_ENABLED
              Value: true
            - Name: INFLUXDB_META_LOGGING_ENABLED
              Value: true
            - Name: INFLUXDB_LOGGING_LEVEL
              Value: error
            - Name: INFLUXDB_DATA_MAX_SERIES_PER_DATABASE
              Value: 0
            - Name: INFLUXDB_DATA_MAX_VALUES_PER_TAG
              Value: 0
            - Name: INFLUXDB_HTTP_LOG_ENABLED
              Value: false
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          MountPoints:
            - ContainerPath: /var/lib/influxdb
              SourceVolume: influxdb-volume
      Cpu: 4 vCPU
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Influx", !Ref ClusterName ] ]
      Memory: 7GB
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: influxdb-volume
          Host:
            SourcePath: /mnt/efs/influxdb

  PrometheusTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # Prometheus
        - Image: docker.io/prom/prometheus:v2.44.0
          Name: prometheus
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          MountPoints:
            - ContainerPath: /etc/prometheus/prometheus.yml
              SourceVolume: prometheus-volume
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
      Cpu: 1 vCPU
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Prometheus", !Ref ClusterName ] ]
      Memory: 1GB
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: prometheus-volume
          Host:
            SourcePath: /etc/prometheus/prometheus.yml

  NginxTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # Nginx
        - Image: docker.io/nginx:1.23.3
          Name: nginx
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          PortMappings:
            - HostPort: !Ref WcIngressPort
              Protocol: tcp
              ContainerPort: !Ref WcIngressPort
            - HostPort: !Ref S3MinioIngressPort
              Protocol: tcp
              ContainerPort: !Ref S3MinioIngressPort
            - HostPort: !Ref GrafanaIngressPort
              Protocol: tcp
              ContainerPort: !Ref GrafanaIngressPort
          MountPoints:
            - ContainerPath: /etc/nginx/nginx.conf
              SourceVolume: nginx-volume
          Environment:
            - Name: FORCE_RECREATE_NGINX_FLAG
              Value: !Ref ForceRecreateNginxFlag
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
      Cpu: 1 vCPU
      NetworkMode: bridge
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Nginx", !Ref ClusterName ] ]
      Memory: 1GB
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: nginx-volume
          Host:
            SourcePath: /etc/nginx/nginx.conf

  GridServicesTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # GRID
        - Image: !Join ['', ['docker.io/browserup/grid-java-api:', !Ref ServicesImageTag]]
          Name: grid-java-api
          Environment:
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref AwsAccessKeyId
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref AwsSecretAccessKey
            - Name: AWS_REGION
              Value: !Ref "AWS::Region"
            - Name: BROWSERUP_CLUSTER_SG_ID
              Value: !Ref ClusterSgId
            - Name: BROWSERUP_CLUSTER_VPC_ID
              Value: !Ref ClusterVpcId
            - Name: BROWSERUP_CLUSTER_NAME
              Value: !Ref ClusterName
            - Name: EC2_INSTANCE_FAMILY
              Value: c5
            - Name: EXECUTION_ROLE_ARN
              Value: !Ref TaskDefinitionsRoleArn
            - Name: MINION_IMAGE_VERSION_TAG
              Value: !Ref ServicesImageTag
            - Name: IAM_INSTANCE_PROFILE
              Value: !Ref InstanceProfileArn
            - Name: ADMIN_EMAILS
              Value: !Ref AdminEmails
            - Name: ECS_INSTANCE_ROLE_ARN
              Value: !Ref EcsInstanceRoleArn
            - Name: BROWSERUP_INFLUX_DB_HOST
              Value: !Join ['', ['influxdb.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_INFLUX_DB_PORT
              Value: 8086
            - Name: BROWSERUP_INFLUX_DB_NAME
              Value: browserup
            - Name: BROWSERUP_INFLUX_DB_PASSWORD
              Value: just_testing
            - Name: BROWSERUP_INFLUX_DB_USER
              Value: root
            - Name: BROWSERUP_IS_CLOUD
              Value: true
            - Name: BROWSERUP_RABBITMQ_DEFAULT_PASS
              Value: just_testing
            - Name: BROWSERUP_RABBITMQ_DEFAULT_USER
              Value: browserup
            - Name: BROWSERUP_RABBITMQ_QUEUE_PORT
              Value: 5672
            - Name: BROWSERUP_RABBITMQ_HOST
              Value: !Join ['', ['rabbitmq.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_ZOOKEEPER_HOST
              Value: !Join ['', ['zookeeper.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_ZOOKEEPER_CLIENT_PORT
              Value: 2181
            - Name: BROWSERUP_S3_MINIO_HOST
              Value: !Join ['', ['minio.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_S3_MINIO_PORT_1
              Value: 9000
            - Name: BROWSERUP_S3_MINIO_PORT_2
              Value: 9001
            - Name: BROWSERUP_S3_MINIO_ACCESS_KEY_ID
              Value: !Ref S3MinioAccessKeyID
            - Name: BROWSERUP_S3_MINIO_SECRET_ACCESS_KEY
              Value: !Ref S3MinioSecretAccessKeyID
            - Name: BROWSERUP_S3_MINIO_HOST_PORT_1
              Value: 9000
            - Name: BROWSERUP_S3_MINIO_ARTIFACTS_BUCKET
              Value: artifacts
            - Name: BROWSERUP_MINIONS_KEY_PAIR_NAME
              Value: !Ref MinionsKeyName
            - Name: BROWSERUP_WEBCONSOLE_PROTOCOL
              Value: !Ref WebconsoleProtocol
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
        # COORDINATOR
        - Image: !Join ['', ['docker.io/browserup/grid-java-coordinator:', !Ref ServicesImageTag]]
          Name: grid-java-coordinator
          Environment:
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref AwsAccessKeyId
            - Name: AWS_REGION
              Value: !Ref "AWS::Region"
            - Name: ADMIN_EMAILS
              Value: !Ref AdminEmails
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref AwsSecretAccessKey
            - Name: BROWSERUP_CLUSTER_SG_ID
              Value: !Ref ClusterSgId
            - Name: BROWSERUP_CLUSTER_VPC_ID
              Value: !Ref ClusterVpcId
            - Name: BROWSERUP_CLUSTER_NAME
              Value: !Ref ClusterName
            - Name: EC2_INSTANCE_FAMILY
              Value: c5
            - Name: BROWSERUP_INFLUX_DB_HOST
              Value: !Join ['', ['influxdb.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_INFLUX_DB_PORT
              Value: 8086
            - Name: BROWSERUP_INFLUX_DB_NAME
              Value: browserup
            - Name: BROWSERUP_INFLUX_DB_PASSWORD
              Value: just_testing
            - Name: BROWSERUP_INFLUX_DB_USER
              Value: root
            - Name: BROWSERUP_IS_CLOUD
              Value: true
            - Name: BROWSERUP_RABBITMQ_DEFAULT_PASS
              Value: just_testing
            - Name: BROWSERUP_RABBITMQ_DEFAULT_USER
              Value: browserup
            - Name: BROWSERUP_RABBITMQ_QUEUE_PORT
              Value: 5672
            - Name: BROWSERUP_RABBITMQ_HOST
              Value: !Join ['', ['rabbitmq.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_ZOOKEEPER_HOST
              Value: !Join ['', ['zookeeper.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_ZOOKEEPER_CLIENT_PORT
              Value: 2181
            - Name: BROWSERUP_S3_MINIO_HOST
              Value: !Join ['', ['minio.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_S3_MINIO_PORT_1
              Value: 9000
            - Name: BROWSERUP_S3_MINIO_PORT_2
              Value: 9001
            - Name: BROWSERUP_S3_MINIO_ACCESS_KEY_ID
              Value: !Ref S3MinioAccessKeyID
            - Name: BROWSERUP_S3_MINIO_SECRET_ACCESS_KEY
              Value: !Ref S3MinioSecretAccessKeyID
            - Name: BROWSERUP_S3_MINIO_HOST_PORT_1
              Value: 9000
            - Name: BROWSERUP_S3_MINIO_ARTIFACTS_BUCKET
              Value: artifacts
            - Name: EXECUTION_ROLE_ARN
              Value: !Ref TaskDefinitionsRoleArn
            - Name: MINION_IMAGE_VERSION_TAG
              Value: !Ref ServicesImageTag
            - Name: IAM_INSTANCE_PROFILE
              Value: !Ref InstanceProfileArn
            - Name: ECS_INSTANCE_ROLE_ARN
              Value: !Ref EcsInstanceRoleArn
            - Name: BROWSERUP_MINIONS_KEY_PAIR_NAME
              Value: !Ref MinionsKeyName
            - Name: BROWSERUP_USER_ARTIFACT_CACHE_PATH
              Value: /bu/artifactcache
            - Name: BROWSERUP_ALLOW_SSH_ACCESS_TO_MINION_FROM_CIDR
              Value: !Ref AllowSshAccessToMinionFromCidr
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          MountPoints:
            - ContainerPath: /var/run/docker.sock
              SourceVolume: docker-sock
      Memory: 2GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "GridServices", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: docker-sock
          Host:
            SourcePath: /var/run/docker.sock

  RabbitMqTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # RABBITMQ
        - Image: docker.io/rabbitmq:3-management
          Name: rabbitmq
          Environment:
            - Name: BROWSERUP_RABBITMQ_DEFAULT_PASS
              Value: just_testing
            - Name: BROWSERUP_RABBITMQ_DEFAULT_USER
              Value: browserup
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          HealthCheck:
            Command: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
            Interval: 5
            Retries: 10
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "RabbitMq", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn

  ZookeeperTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # ZOOKEEPER
        - Image: docker.io/zookeeper:3.8.1
          Name: zookeeper
          Environment:
            - Name: BROWSERUP_ZOO_MAX_CLIENT_CNXNS
              Value: 500
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          MountPoints:
            - ContainerPath: /conf/zoo.cfg
              SourceVolume: zookeeper-volume
          HealthCheck:
            Command: [ "CMD-SHELL", "nc -z localhost 2181 || exit -1" ]
            Interval: 5
            Retries: 10
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Zookeeper", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: zookeeper-volume
          Host:
            SourcePath: /etc/zookeeper/zoo.cfg

  GrafanaTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: grafana
          Image: grafana/grafana:latest
          MountPoints:
            - ContainerPath: /etc/grafana/provisioning/datasources/grafana-datasource.yaml
              SourceVolume: grafana-datasource-volume
            - ContainerPath: /etc/grafana/provisioning/dashboards/grafana-dashboards-provider.yaml
              SourceVolume: grafana-dashboards-provider-volume
          Environment:
            - Name: GF_SECURITY_ADMIN_USER
              Value: "browserup"
            - Name: GF_SECURITY_ADMIN_PASSWORD
              Value: "just_testing"
      Family: !Join [ "", [ "Grafana", !Ref ClusterName ] ]
      Volumes:
        - Name: grafana-datasource-volume
          Host:
            SourcePath: /etc/grafana/provisioning/datasources/grafana-datasource.yaml
        - Name: grafana-dashboards-provider-volume
          Host:
            SourcePath: /etc/grafana/provisioning/dashboards/grafana-dashboards-provider.yaml
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
  MysqlTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # MYSQL
        - Image: docker.io/mysql:8.0.31-oracle
          Name: mysql
          Environment:
            - Name: MYSQL_DATABASE
              Value: browserup_production
            - Name: BROWSERUP_MYSQL_PASSWORD
              Value: just_testing
            - Name: MYSQL_RANDOM_ROOT_PASSWORD
              Value: yes
            - Name: MYSQL_USER
              Value: browserup
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          MountPoints:
            - ContainerPath: /var/lib/mysql
              SourceVolume: mysql-volume
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Mysql", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: mysql-volume
          Host:
            SourcePath: /mnt/efs/mysql

  RedisTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # Redis
        - Image: docker.io/redis:6.2.5
          Name: redis
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          HealthCheck:
            Command: [ "CMD-SHELL", "redis-cli --raw incr ping" ]
            Interval: 5
            Retries: 10
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Redis", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn

  FluentBitTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # Fluent Bit
        - Image: fluent/fluent-bit:latest
          Name: fluentbit
          Essential: true
          Environment:
            - Name: LOG_PATH
              Value: /tmp
          LogConfiguration:
            LogDriver: json-file
            Options:
              max-size: !Ref LogMaxSize
              max-file: !Ref LogMaxFile
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          MountPoints:
            - ContainerPath: /fluent-bit/etc/fluent-bit.conf
              SourceVolume: fluentbit-volume
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Fluentbit", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: fluentbit-volume
          Host:
            SourcePath: /fluent-bit/etc/fluent-bit.conf

  LokiTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Image: grafana/loki:latest
          Name: loki
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          MountPoints:
            - ContainerPath: /etc/loki/local-config.yaml
              SourceVolume: loki-volume
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Loki", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: loki-volume
          Host:
            SourcePath: /etc/loki/local-config.yaml

  WebconsoleTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # WEBCONSOLE
        - Image: !Join ['', ['docker.io/browserup/webconsole:', !Ref ServicesImageTag]]
          Name: webconsole
          Environment:
            - Name: DOCKER_LOGS
              Value: true
            - Name: BROWSERUP_CLUSTER_PUBLIC_IP
              Value: !Ref ClusterPublicIP
            - Name: INITIAL_API_TOKEN
              Value: !Ref InitialApiToken
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref AwsAccessKeyId
            - Name: AWS_REGION
              Value: !Ref "AWS::Region"
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref AwsSecretAccessKey
            - Name: BROWSERUP_MYSQL_HOST
              Value: !Join ['', ['mysql.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_MYSQL_PASSWORD
              Value: just_testing
            - Name: DATABASE_URL
              Value: !Join [ "", ["mysql2://browserup:just_testing@mysql.", !Ref PrivateDnsNamespaceName, "/browserup_production"]]
            - Name: GRID_SERVICE_URL
              Value: !Join [ "", ["http://grid-java-api.", !Ref PrivateDnsNamespaceName, ":8080/grid"]]
            - Name: BROWSERUP_INFLUX_DB_HOST
              Value: !Join [ "", ["influxdb.", !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_INFLUX_DB_PORT
              Value: 8086
            - Name: BROWSERUP_INFLUX_DB_NAME
              Value: browserup
            - Name: BROWSERUP_INFLUX_DB_PASSWORD
              Value: just_testing
            - Name: BROWSERUP_INFLUX_DB_USER
              Value: root
            - Name: INFLUX_SERVICE_URL
              Value: http://influxdb:8086
            - Name: BROWSERUP_IS_CLOUD
              Value: true
            - Name: RAILS_ENV
              Value: production
            - Name: RAILS_LOG_TO_STDOUT
              Value: true
            - Name: BROWSERUP_RAILS_MASTER_KEY
              Value: 312ad97c276624b8069b61b73aa13a8a
            - Name: RAILS_SERVE_STATIC_FILES
              Value: true
            - Name: RAILS_MAX_THREADS
              Value: 20
            - Name: BROWSERUP_REDIS_URL
              Value: redis://redis:6379/1
            - Name: BROWSERUP_S3_MINIO_HOST
              Value: !Join ['', ['minio.', !Ref PrivateDnsNamespaceName]]
            - Name: BROWSERUP_S3_MINIO_PORT_1
              Value: 9000
            - Name: BROWSERUP_S3_MINIO_PORT_2
              Value: 9001
            - Name: BROWSERUP_S3_MINIO_ACCESS_KEY_ID
              Value: !Ref S3MinioAccessKeyID
            - Name: BROWSERUP_S3_MINIO_SECRET_ACCESS_KEY
              Value: !Ref S3MinioSecretAccessKeyID
            - Name: BROWSERUP_S3_MINIO_ARTIFACTS_BUCKET
              Value: artifacts
            - Name: BROWSERUP_WEBCONSOLE_PROTOCOL
              Value: !Ref WebconsoleProtocol
            - Name: BROWSERUP_PRIVATE_DNS_NAMESPACE_NAME
              Value: !Ref PrivateDnsNamespaceName
            - Name: BROWSERUP_STANDARD_IMAGE_VERSION_TAG_OVERRIDE
              Value: !Ref StandardImageVersionTag
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          HealthCheck:
            Command: [ "CMD-SHELL", !Join [ "", [ "curl -f -k ", !Ref WebconsoleProtocol, "://localhost:3000/health_checks" ] ] ]
            Interval: 30
            Retries: 10
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "Webconsole", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn

  S3MinioTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        # S3 MINIO
        - Image: quay.io/minio/minio:RELEASE.2022-01-08T03-11-54Z
          Name: minio
          Command:
            - "minio"
            - "server"
            - "/data"
            - "--console-address"
            - ":9001"
          Environment:
            - Name: MINIO_ROOT_USER
              Value: !Ref S3MinioAccessKeyID
            - Name: MINIO_ROOT_PASSWORD
              Value: !Ref S3MinioSecretAccessKeyID
          Essential: true
          LogConfiguration:
            LogDriver: fluentd
            Options:
              fluentd-address: !Join ['', ['fluentbit.', !Ref PrivateDnsNamespaceName, ':24224']]
          Ulimits:
            - Name: nofile
              SoftLimit: 51200
              HardLimit: 51200
          HealthCheck:
            Command: [ "CMD-SHELL", "curl -f http://localhost:9000/minio/health/live" ]
            Interval: 5
            Retries: 10
          MountPoints:
            - ContainerPath: /data
              SourceVolume: minio-volume
      Memory: 1GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref TaskDefinitionsRoleArn
      Family: !Join [ "", [ "S3Minio", !Ref ClusterName ] ]
      TaskRoleArn: !Ref TaskDefinitionsRoleArn
      Volumes:
        - Name: minio-volume
          Host:
            SourcePath: /mnt/efs/minio-volume

  PrometheusDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: prometheus
      NamespaceId: !Ref PrivateNamespaceId

  PrometheusService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "prometheus"
      TaskDefinition:
        Ref: PrometheusTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt PrometheusDiscoveryService.Arn

  FluentBitDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: fluentbit
      NamespaceId: !Ref PrivateNamespaceId

  FluentBitService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "fluentbit"
      TaskDefinition:
        Ref: FluentBitTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt FluentBitDiscoveryService.Arn

  LokiDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: loki
      NamespaceId: !Ref PrivateNamespaceId

  LokiService:
    Type: AWS::ECS::Service
    DependsOn:
      - FluentBitService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "loki"
      TaskDefinition:
        Ref: LokiTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt LokiDiscoveryService.Arn

  GrafanaDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: grafana
      NamespaceId: !Ref PrivateNamespaceId

  GrafanaService:
    Type: AWS::ECS::Service
    DependsOn:
      - FluentBitService
      - PrometheusService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "grafana"
      TaskDefinition:
        Ref: GrafanaTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt GrafanaDiscoveryService.Arn

  ZookeeperDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: zookeeper
      NamespaceId: !Ref PrivateNamespaceId

  ZookeeperService:
    Type: AWS::ECS::Service
    DependsOn:
      - ZookeeperTaskDefinition
      - FluentBitService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "zookeeper"
      TaskDefinition:
        Ref: ZookeeperTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt ZookeeperDiscoveryService.Arn

  MysqlDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: mysql
      NamespaceId: !Ref PrivateNamespaceId

  MysqlService:
    Type: AWS::ECS::Service
    DependsOn:
      - MysqlTaskDefinition
      - FluentBitService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "mysql"
      TaskDefinition:
        Ref: MysqlTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt MysqlDiscoveryService.Arn

  RabbitMqDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: rabbitmq
      NamespaceId: !Ref PrivateNamespaceId

  RabbitMqService:
    Type: AWS::ECS::Service
    DependsOn:
      - RabbitMqTaskDefinition
      - FluentBitService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "rabbitmq"
      TaskDefinition:
        Ref: RabbitMqTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt RabbitMqDiscoveryService.Arn

  NginxDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: SRV
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: nginx
      NamespaceId: !Ref PrivateNamespaceId

  NginxService:
    Type: AWS::ECS::Service
    DependsOn:
      - NginxTaskDefinition
      - WebconsoleService
      - S3MinioService
      - FluentBitService
      - GrafanaService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "nginx"
      TaskDefinition:
        Ref: NginxTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: NginxCapacityProvider
          Weight: 1
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt NginxDiscoveryService.Arn
          ContainerPort: 80
          ContainerName: nginx

  GridServicesDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: grid-java-api
      NamespaceId: !Ref PrivateNamespaceId

  GridServices:
    Type: AWS::ECS::Service
    DependsOn:
      - GridServicesTaskDefinition
      - RabbitMqService
      - ZookeeperService
      - FluentBitService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "grid-java-api"
      TaskDefinition:
        Ref: GridServicesTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: X86CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt GridServicesDiscoveryService.Arn

  WebconsoleDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: webconsole
      NamespaceId: !Ref PrivateNamespaceId

  WebconsoleService:
    Type: AWS::ECS::Service
    DependsOn:
      - WebconsoleTaskDefinition
      - RedisService
      - MysqlService
      - InfluxService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "webconsole"
      TaskDefinition:
        Ref: WebconsoleTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: X86CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt WebconsoleDiscoveryService.Arn

  RedisDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: redis
      NamespaceId: !Ref PrivateNamespaceId

  RedisService:
    Type: AWS::ECS::Service
    DependsOn:
      - RedisTaskDefinition
      - FluentBitService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "redis"
      TaskDefinition:
        Ref: RedisTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt RedisDiscoveryService.Arn

  S3MinioDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: minio
      NamespaceId: !Ref PrivateNamespaceId

  S3MinioService:
    Type: AWS::ECS::Service
    DependsOn:
      - S3MinioTaskDefinition
      - FluentBitService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "minio"
      TaskDefinition:
        Ref: S3MinioTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: Arm64CapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt S3MinioDiscoveryService.Arn

  InfluxDiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: influxdb
      NamespaceId: !Ref PrivateNamespaceId

  InfluxService:
    Type: AWS::ECS::Service
    DependsOn:
      - InfluxTaskDefinition
      - FluentBitService
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      ServiceName: "influxdb"
      TaskDefinition:
        Ref: InfluxTaskDefinition
      CapacityProviderStrategy:
        - CapacityProvider: InfluxCapacityProvider
          Weight: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnetIDs
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      ServiceRegistries:
        - RegistryArn: !GetAtt InfluxDiscoveryService.Arn

Outputs:
  UsedByECSCreateCluster:
    Description: Flag used by ECS Create Cluster Wizard
    Value: 'true'
  TemplateVersion:
    Description: The version of the template used by Create Cluster Wizard
    Value: '2.0.0'
