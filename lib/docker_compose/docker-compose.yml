version: '3.7'

services:

  ## Compositions:
  backend-services:
    image: busybox
    depends_on:
      - chronograf
      - influxdb
      - mysql
      - rabbitmq
      - redis
      - zookeeper
      - minio
      - grafana

  backend-services-nodb:
    image: busybox
    depends_on:
      - chronograf
      - influxdb
      - rabbitmq
      - zookeeper

  frontend-services:
    image: busybox
    depends_on:
      - webconsole

  middleware-services:
    image: busybox
    depends_on:
      - grid-java-coordinator
      - grid-java-api

  all:
    image: busybox
    depends_on:
      - backend-services
      - middleware-services
      - frontend-services

  ## Services:
  grid-java-api:
    container_name: browserup_grid-java-api
    image: docker.io/browserup/grid-java-api:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${GRID_JAVA_API_PORT}:8080"
    restart: on-failure
    environment:
      - BROWSERUP_MINION_DEBUG_SUSPEND=n
      - BROWSERUP_MINION_DEBUG=${BROWSERUP_MINION_DEBUG}
      - BROWSERUP_MINION_DEBUG_PORT=8001
      - BROWSERUP_GRID_API_DEBUG=${BROWSERUP_GRID_API_DEBUG}
      - BROWSERUP_GRID_API_DEBUG_PORT=8003
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_DEFAULT_USER=browserup
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_QUEUE_PORT=5672
      - ZOOKEEPER_HOST=${ZOOKEEPER_HOST}
      - ZOOKEEPER_CLIENT_PORT=2181
      - INFLUX_DB_HOST=${INFLUX_DB_HOST}
      - INFLUX_DB_PORT=8086
      - INFLUX_DB_NAME=browserup
      - INFLUX_DB_USER=browserup
      - INFLUX_DB_PASSWORD=${INFLUX_DB_PASSWORD}
      - MINION_VUS=1
      - MAX_MINIONS_PER_EC2_INSTANCE=${MAX_MINIONS_PER_EC2_INSTANCE}
      - IS_CLOUD=false
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - INSTANCE_TYPE=${INSTANCE_TYPE}
      - IAM_INSTANCE_PROFILE=${IAM_INSTANCE_PROFILE}
      - NUMBER_OF_CPU_UNITS=${NUMBER_OF_CPU_UNITS}
      - NUMBER_OF_CPU_UNITS_FOR_TASK=${NUMBER_OF_CPU_UNITS_FOR_TASK}
      - AMOUNT_OF_MEMORY_USED_BY_TASK=${AMOUNT_OF_MEMORY_USED_BY_TASK}
      - EXECUTION_ROLE_ARN=${EXECUTION_ROLE_ARN}
      - MINION_IMAGE_VERSION_TAG=${MINION_IMAGE_VERSION_TAG}
      - S3_MINIO_ACCESS_KEY_ID=${S3_MINIO_ACCESS_KEY_ID}
      - S3_MINIO_SECRET_ACCESS_KEY=${S3_MINIO_SECRET_ACCESS_KEY}
      - S3_MINIO_HOST=${S3_MINIO_HOST}
      - S3_MINIO_PORT_1=9000
      - S3_MINIO_PORT_2=9001
      - S3_MINIO_HOST_PORT_1=${S3_MINIO_PORT_1}
      - S3_MINIO_ARTIFACTS_BUCKET=${S3_MINIO_ARTIFACTS_BUCKET}
      - BROWSERUP_CLUSTER_NAME=${BROWSERUP_CLUSTER_NAME}
    depends_on:
      - influxdb
      - zookeeper
      - rabbitmq
      - fluentbit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"

  grid-java-coordinator:
    container_name: browserup_grid-java-coordinator
    image: docker.io/browserup/grid-java-coordinator:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure
    environment:
      - BROWSERUP_MINION_USE_LOCAL_CACHE=${BROWSERUP_MINION_USE_LOCAL_CACHE}
      - STANDARD_IMAGE_VERSION_TAG_OVERRIDE=${STANDARD_IMAGE_VERSION_TAG_OVERRIDE}
      - BROWSERUP_MINION_PROFILING=${BROWSERUP_MINION_PROFILING}
      - BROWSERUP_MINION_PROFILING_PORT=${BROWSERUP_MINION_PROFILING_PORT}
      - BROWSERUP_MINION_DEBUG_SUSPEND=${BROWSERUP_MINION_DEBUG_SUSPEND}
      - BROWSERUP_MINION_DEBUG=${BROWSERUP_MINION_DEBUG}
      - BROWSERUP_MINION_DEBUG_PORT=${BROWSERUP_MINION_DEBUG_PORT}
      - BROWSERUP_GRID_COORDINATOR_DEBUG=${BROWSERUP_GRID_COORDINATOR_DEBUG}
      - BROWSERUP_GRID_COORDINATOR_DEBUG_PORT=${BROWSERUP_GRID_COORDINATOR_DEBUG_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_DEFAULT_USER=browserup
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_QUEUE_PORT=5672
      - ZOOKEEPER_HOST=${ZOOKEEPER_HOST}
      - ZOOKEEPER_CLIENT_PORT=2181
      - INFLUX_DB_HOST=${INFLUX_DB_HOST}
      - INFLUX_DB_PORT=8086
      - INFLUX_DB_NAME=browserup
      - INFLUX_DB_USER=browserup
      - INFLUX_DB_PASSWORD=${INFLUX_DB_PASSWORD}
      - MINION_VUS=1
      - MINION_IMAGE_VERSION_TAG=${MINION_IMAGE_VERSION_TAG}
      - S3_MINIO_ACCESS_KEY_ID=${S3_MINIO_ACCESS_KEY_ID}
      - S3_MINIO_SECRET_ACCESS_KEY=${S3_MINIO_SECRET_ACCESS_KEY}
      - S3_MINIO_HOST=${S3_MINIO_HOST}
      - S3_MINIO_PORT_1=9000
      - S3_MINIO_PORT_2=9001
      - IS_CLOUD=false
      - S3_MINIO_ARTIFACTS_BUCKET=${S3_MINIO_ARTIFACTS_BUCKET}
      - S3_MINIO_HOST_PORT_1=${S3_MINIO_PORT_1}
      - BROWSERUP_CLUSTER_NAME=${BROWSERUP_CLUSTER_NAME}
      - USER_ARTIFACT_CACHE_PATH=/bu/artifactcache
      - USE_LOCAL_DOCKER_CACHED_IMAGE=${USE_LOCAL_DOCKER_CACHED_IMAGE}
    depends_on:
      - zookeeper
      - rabbitmq
      - grid-java-api
      - fluentbit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"

  webconsole:
    container_name: browserup_webconsole
    image: docker.io/browserup/webconsole:latest
    privileged: true
    security_opt:
      - "seccomp=unconfined"
      - "apparmor=unconfined"
    devices:
      - "/dev/fuse"
    ports:
      - "${WEBCONSOLE_PORT}:3000"
    environment:
      - DOCKER_LOGS=true
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USERNAME=browserup
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=3306
      - INFLUX_DB_HOST=${INFLUX_DB_HOST}
      - INFLUX_DB_PORT=8086
      - INFLUX_DB_NAME=browserup
      - INFLUX_DB_USER=browserup
      - INFLUX_DB_PASSWORD=${INFLUX_DB_PASSWORD}
      - GRID_SERVICE_URL=http://${GRID_JAVA_API_HOST}:8080/grid
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - IS_CLOUD=false
      - REDIS_URL=redis://${REDIS_HOST}:6379/1
      - INITIAL_API_TOKEN=${INITIAL_API_TOKEN}
      - S3_MINIO_ACCESS_KEY_ID=${S3_MINIO_ACCESS_KEY_ID}
      - S3_MINIO_SECRET_ACCESS_KEY=${S3_MINIO_SECRET_ACCESS_KEY}
      - S3_MINIO_ARTIFACTS_BUCKET=${S3_MINIO_ARTIFACTS_BUCKET}
      - S3_MINIO_HOST=${S3_MINIO_HOST}
      - S3_MINIO_PORT_1=9000
      - S3_MINIO_PORT_2=9001
      - WEBCONSOLE_PROTOCOL=${WEBCONSOLE_PROTOCOL}
      - PRIVATE_DNS_NAMESPACE_NAME=${PRIVATE_DNS_NAMESPACE_NAME}
      - CLUSTER_PUBLIC_IP=${CLUSTER_PUBLIC_IP}
    depends_on:
      - mysql
      - influxdb
      - grid-java-api
      - redis
      - minio
      - fluentbit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
    volumes:
      - ./containers:/var/lib/containers

  chronograf:
    image: chronograf:1.7.16
    ports:
      - "${CHRONOGRAF_PORT}:8888"
    depends_on:
      - influxdb
      - fluentbit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"

  influxdb:
    container_name: browserup_influxdb
    image: influxdb:1.8.10
    volumes:
      - influxdb-volume:/var/lib/influxdb
    ports:
      - "${INFLUX_DB_PORT}:8086"
    environment:
      - INFLUXDB_DB=browserup
      - INFLUX_DB_USER=browserup
      - INFLUX_DB_PASSWORD=${INFLUX_DB_PASSWORD}
      - INFLUXDB_LOGGING_LEVEL=debug
      - INFLUXDB_DATA_MAX_SERIES_PER_DATABASE=0
      - INFLUXDB_DATA_MAX_VALUES_PER_TAG=0
      - INFLUXDB_HTTP_LOG_ENABLED=false
    depends_on:
      - fluentbit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"

  mysql:
    container_name: browserup_mysql
    image: mysql:8.0.31-oracle
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./resources/init.sql:/docker-entrypoint-initdb.d/z-create-test-db.sql
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=browserup_development
      - MYSQL_USER=browserup
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      - fluentbit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"

  redis:
    container_name: browserup_redis
    image: redis:6.2.5
    ports:
      - "${REDIS_PORT}:6379"
    depends_on:
      - fluentbit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"

  rabbitmq:
    container_name: browserup_rabbitmq
    image: rabbitmq:3.8.2-management
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_PEER_DISCOVERY_PORT}:4369"
      - "${RABBITMQ_QUEUE_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=browserup
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      - fluentbit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"

  zookeeper:
    container_name: browserup_zookeeper
    image: zookeeper:3.8.1
    volumes:
      - ./resources/zoo.cfg:/conf/zoo.cfg
      - zookeeper-data-volume:/data
      - zookeeper-datalog-volume:/datalog
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:2181"
    environment:
      - ZOO_TICK_TIME=300000  # Helpful for debugging
      - ZOO_CFG_EXTRA=warn
      - ZOO_MAX_CLIENT_CNXNS=${ZOO_MAX_CLIENT_CNXNS}
    depends_on:
      - fluentbit
      - loki
      - grafana
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"

  minio:
    container_name: browserup_minio
    image: quay.io/minio/minio:RELEASE.2022-01-08T03-11-54Z
    command: server --console-address ":9001" /data
    ports:
      - "${S3_MINIO_PORT_1}:9000"
      - "${S3_MINIO_PORT_2}:9001"
    environment:
      MINIO_ROOT_USER: ${S3_MINIO_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${S3_MINIO_SECRET_ACCESS_KEY}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    hostname: minio
    depends_on:
      - fluentbit
    volumes:
      - minio-volume:/data

  # router
  fluentbit:
    image: fluent/fluent-bit:latest
    depends_on:
      - loki
    environment:
      - LOG_PATH=/tmp
    ports:
      - "24224:24224"
      - "24224:24224/udp"
      - "2020:2020"
    volumes:
      - ./resources/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf

  # storage
  loki:
    image: grafana/loki:latest
    healthcheck:
      test: curl --fail http://localhost:3100/ready || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./resources/loki-config.yaml:/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_USER: "browserup"
      GF_SECURITY_ADMIN_PASSWORD: "just_testing"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/grafana/provisioning/dashboards/grafana-default-dashboard.json
    depends_on:
      - fluentbit
      - prometheus
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./resources/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/grafana-datasource.yaml
      - ./resources/grafana-dashboards-provider.yaml:/etc/grafana/provisioning/dashboards/grafana-dashboards-provider.yaml
      - ./resources/grafana-default-dashboard.json:/etc/grafana/provisioning/dashboards/grafana-default-dashboard.json
      - ./resources/grafana-zookeeper-dashboard.json:/etc/grafana/provisioning/dashboards/grafana-zookeeper-dashboard.json
      - ./resources/grafana-grid-services-dashboard.json:/etc/grafana/provisioning/dashboards/grafana-grid-services-dashboard.json

  prometheus:
    image: prom/prometheus:v2.44.0
    volumes:
      - ./resources/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"

volumes:
  influxdb-volume:
  mysql-volume:
  rabbitmq-volume:
  zookeeper-data-volume:
  zookeeper-datalog-volume:
  minio-volume:
